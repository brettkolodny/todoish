defmodule Todoish.Repo.Migrations.AddListsAndItems do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:lists, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
      add :title, :text, default: "A Todoish List"
      add :description, :text, default: "Add items to get started!"
      add :url_id, :text, null: false
    end

    create unique_index(:lists, [:url_id], name: "lists_unique_url_id_index")

    create table(:items, primary_key: false) do
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :id, :uuid, null: false, primary_key: true
      add :title, :text, null: false
      add :status, :text, null: false, default: "incompleted"

      add :list_id,
          references(:lists,
            column: :id,
            name: "items_list_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:items, "items_list_id_fkey")

    drop table(:items)

    drop_if_exists unique_index(:lists, [:url_id], name: "lists_unique_url_id_index")

    drop table(:lists)
  end
end